# Set a new `ll` alias when there are multiple already set. All old `ll` alias
# entries will be removed before the new entry will be added.

- import_tasks: "util/prepare_test_config.yml"
  vars:
    config_name: "bashrc"

- set_fact:
    ll_alias: "^\\s*alias ll="
    ll_commented: "^\\s*#\\s*alias ll="

- set_fact:
    config: "{{ lookup('file', test_config) }}"

- set_fact:
    ll_alias_initial_count: >
      {{
        config | regex_findall(ll_alias, multiline=true) | length
      }}
    ll_commented_initial_count: >
      {{
        config | regex_findall(ll_commented, multiline=true) | length
      }}

- name: "TEST there are several initial aliases"
  assert:
    that:
      - ll_alias_initial_count | int > 1

- name: "TEST there are several initial commented aliases"
  assert:
    that:
      - ll_commented_initial_count | int > 1


- name: "Set the new alias value"
  local.uws.config_option:
    file: "{{ test_config }}"
    option: "alias ll"
    value: "'ls --color=auto'"

- set_fact:
    ll_new_alias: "^\\s*alias ll='ls --color=auto'"


- set_fact:
    config: "{{ lookup('file', test_config) }}"

- name: "TEST the new alias is set"
  assert:
    that:
      - config | regex_findall(ll_new_alias, multiline=true) | length == 1

- set_fact:
    ll_alias_count: >
      {{
        config | regex_findall(ll_alias, multiline=true) | length
      }}
    ll_commented_count: >
      {{
        config | regex_findall(ll_commented, multiline=true) | length
      }}

- name: "TEST there is only 1 alias entry"
  assert:
    that:
      - ll_alias_count | int == 1

- name: "TEST all commented aliases are still here"
  assert:
    that:
      - ll_commented_initial_count == ll_commented_count


# Change the 'user' option in the [database] section of INI file.

- import_tasks: "util/prepare_test_config.yml"
  vars:
    config_name: "valid.ini"

- import_tasks: "assert/line_in_ini_section.yml"
  vars:
    section: "database"
    line: '^\s*user=app_user'
    exist: true
    msg: "The [database] 'user' must be initially set to 'app_user'"

- name: "Change the [database] 'user' to 'root'"
  local.uws.config_option:
    file: "{{ test_config }}"
    section: "database"
    option: "user"
    value: "root"

- import_tasks: "assert/line_in_ini_section.yml"
  vars:
    section: "database"
    line: '^\s*user=root\b'
    exist: true
    msg: "The [database] 'user' must be set to 'root'"

- import_tasks: "assert/line.yml"
  vars:
    line: '^\s*user='
    amount: "1"
    msg: "The only one 'user' option must be set"
